@model CVBuilder.Models.CV
@{
    ViewData["Title"] = "Create CV";
}

<h2>Create Your CV</h2>

<form asp-controller="CV" asp-action="Create" method="post" id="cvForm" novalidate>
    <div class="form-group">
        <label asp-for="FirstName"></label>
        <input asp-for="FirstName" class="form-control" value="@ViewBag.User?.FirstName" />
        <span asp-validation-for="FirstName" class="text-danger d-none">This field is required</span>
    </div>

    <div class="form-group">
        <label asp-for="LastName"></label>
        <input asp-for="LastName" class="form-control" required value="@ViewBag.User?.LastName" />
        <span asp-validation-for="LastName" class="text-danger d-none">This field is required</span>
    </div>

    <div class="form-group">
        <label asp-for="PhoneNumber"></label>
        <input asp-for="PhoneNumber" class="form-control" required value="@ViewBag.User?.PhoneNumber" />
        <span asp-validation-for="PhoneNumber" class="text-danger d-none">This field is required</span>
    </div>

    <div class="form-group">
        <label asp-for="Email"></label>
        <input asp-for="Email" class="form-control" required value="@ViewBag.User?.Email" />
        <span asp-validation-for="Email" class="text-danger d-none">This field is required</span>
    </div>

    <div class="form-group">
        <label asp-for="Summary"></label>
        <textarea asp-for="Summary" class="form-control" required></textarea>
        <span asp-validation-for="Summary" class="text-danger d-none">This field is required</span>
    </div>

    <hr />

    <!-- Work Experience Section -->
    <h3>Work Experience</h3>
    <div id="work-experience-container">
        <div class="work-experience">
            <div class="form-group">
                <label>Job Title</label>
                <input name="WorkExperiences[0].JobTitle" class="form-control" required />
                <span class="text-danger d-none">This field is required</span>
            </div>
            <div class="form-group">
                <label>Company</label>
                <input name="WorkExperiences[0].Company" class="form-control" required />
                <span class="text-danger d-none">This field is required</span>
            </div>
            <div class="form-group">
                <label>Start Date</label>
                <input type="date" name="WorkExperiences[0].StartDate" class="form-control" required />
                <span class="text-danger d-none">Please select a valid start date</span>
            </div>
            <div class="form-group">
                <label>End Date</label>
                <input type="date" name="WorkExperiences[0].EndDate" class="form-control" />
            </div>
            <div class="form-group">
                <label>Responsibilities</label>
                <textarea name="WorkExperiences[0].Responsibilities" class="form-control"></textarea>
            </div>
        </div>
    </div>
    <button type="button" id="add-work-experience" class="btn btn-secondary">Add More Work Experience</button>

    <hr />

    <!-- Education Section -->
    <h3>Education</h3>
    <div id="education-container">
        <div class="education">
            <div class="form-group">
                <label>Degree</label>
                <input name="Educations[0].Degree" class="form-control" required />
                <span class="text-danger d-none">This field is required</span>
            </div>
            <div class="form-group">
                <label>Institution</label>
                <input name="Educations[0].Institution" class="form-control" required />
                <span class="text-danger d-none">This field is required</span>
            </div>
            <div class="form-group">
                <label>Graduation Year</label>
                <input type="number" name="Educations[0].GraduationYear" class="form-control" required />
                <span class="text-danger d-none">This field is required</span>
            </div>
        </div>
    </div>
    <button type="button" id="add-education" class="btn btn-secondary">Add More Education</button>

    <hr />

    <button type="submit" class="btn btn-primary">Save CV</button>
</form>

<script>
    document.getElementById('add-work-experience').addEventListener('click', function() {
        let index = document.querySelectorAll('.work-experience').length;
        let container = document.getElementById('work-experience-container');
        let template = `
            <div class="work-experience">
                <div class="form-group">
                    <label>Job Title</label>
                    <input name="WorkExperiences[${index}].JobTitle" class="form-control" required />
                    <span class="text-danger d-none">This field is required</span>
                </div>
                <div class="form-group">
                    <label>Company</label>
                    <input name="WorkExperiences[${index}].Company" class="form-control" required />
                    <span class="text-danger d-none">This field is required</span>
                </div>
                <div class="form-group">
                    <label>Start Date</label>
                    <input type="date" name="WorkExperiences[${index}].StartDate" class="form-control" required />
                    <span class="text-danger d-none">Please select a valid start date</span>
                </div>
                <div class="form-group">
                    <label>End Date</label>
                    <input type="date" name="WorkExperiences[${index}].EndDate" class="form-control" />
                </div>
                <div class="form-group">
                    <label>Responsibilities</label>
                    <textarea name="WorkExperiences[${index}].Responsibilities" class="form-control"></textarea>
                </div>
            </div>
        `;
        container.insertAdjacentHTML('beforeend', template);
    });

    document.getElementById('cvForm').addEventListener('submit', function(event) {
        let invalidFields = document.querySelectorAll('.form-control:invalid');
        invalidFields.forEach(field => {
            field.classList.add('is-invalid');
            field.nextElementSibling.classList.remove('d-none'); // Show error message
        });
        if (invalidFields.length > 0) {
            event.preventDefault(); // Prevent form submission if validation fails
        }
    });

    document.querySelectorAll('.form-control').forEach(input => {
        input.addEventListener('input', function () {
            if (this.value.trim() !== "") {
                this.classList.remove('is-invalid');
                this.nextElementSibling.classList.add('d-none'); // Hide error message
            }
        });
    });
</script>
